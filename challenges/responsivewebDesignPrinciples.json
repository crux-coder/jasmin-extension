[
  {
    "section": "Responsive Web Design Principles",
    "name": "Create A Media Query",
    "url": "https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-principles/create-a-media-query",
    "remove": ["ALL_HELPERS"],
    "description": "\n<p>Media Queries are a new technique introduced in CSS3 that change the presentation of content based on different viewport sizes. The viewport is a user's visible area of a web page, and is different depending on the device used to access the site.</p>\n<p>Media Queries consist of a media type, and if that media type matches the type of device the document is displayed on, the styles are applied. You can have as many selectors and styles inside your media query as you want.</p>\n<p>Here's an example of a media query that returns the content when the device's width is less than or equal to <code>100px</code>:</p>\n<pre class=\"language-css\" tabindex=\"0\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* CSS Rules */</span> <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>and the following media query returns the content when the device's height is more than or equal to <code>350px</code>:</p>\n<pre class=\"language-css\" tabindex=\"0\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-height</span><span class=\"token punctuation\">:</span> 350px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* CSS Rules */</span> <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Remember, the CSS inside the media query is applied only if the media type matches that of the device being used.</p>\n",
    "instructions": "\n<p>Add a media query, so that the <code>p</code> tag has a <code>font-size</code> of <code>10px</code> when the device's height is less than or equal to <code>800px</code>.</p>\n"
  },
  {
    "section": "Responsive Web Design Principles",
    "name": "Make An Image Responsive",
    "url": "https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-principles/make-an-image-responsive",
    "remove": ["ALL_HELPERS"],
    "description": "\n<p>Making images responsive with CSS is actually very simple. You just need to add these properties to an image:</p>\n<pre class=\"language-css\" tabindex=\"0\"><code class=\"language-css\"><span class=\"token selector\">img</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>The <code>max-width</code> of <code>100%</code> will make sure the image is never wider than the container it is in, and the <code>height</code> of <code>auto</code> will make the image keep its original aspect ratio.</p>\n",
    "instructions": "\n<p>Add the style rules to the <code>responsive-img</code> class to make it responsive. It should never be wider than its container (in this case, it's the preview window) and it should keep its original aspect ratio. After you have added your code, resize the preview to see how your images behave.</p>\n"
  },
  {
    "section": "Responsive Web Design Principles",
    "name": "Use A Retina Image For Higher Resolution Displays",
    "url": "https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-principles/use-a-retina-image-for-higher-resolution-displays",
    "remove": ["ALL_HELPERS"],
    "description": "\n<p>With the increase of internet connected devices, their sizes and specifications vary, and the displays they use could be different externally and internally. Pixel density is an aspect that could be different on one device from others and this density is known as Pixel Per Inch(PPI) or Dots Per Inch(DPI). The most famous such display is the one known as a \"Retina Display\" on the latest Apple MacBook Pro notebooks, and recently iMac computers. Due to the difference in pixel density between a \"Retina\" and \"Non-Retina\" displays, some images that have not been made with a High-Resolution Display in mind could look \"pixelated\" when rendered on a High-Resolution display.</p>\n<p>The simplest way to make your images properly appear on High-Resolution Displays, such as the MacBook Pros \"retina display\" is to define their <code>width</code> and <code>height</code> values as only half of what the original file is. Here is an example of an image that is only using half of the original height and width:</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">img</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 250px<span class=\"token punctuation\">;</span> <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 250px<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>coolPic500x500<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>A most excellent picture<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n",
    "instructions": "\n<p>Set the <code>width</code> and <code>height</code> of the <code>img</code> tag to half of their original values. In this case, both the original <code>height</code> and the original <code>width</code> are <code>200px</code>.</p>\n"
  },
  {
    "section": "Responsive Web Design Principles",
    "name": "Make Typography Responsive",
    "url": "https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-principles/make-typography-responsive",
    "remove": ["ALL_HELPERS"],
    "description": "\n<p>Instead of using <code>em</code> or <code>px</code> to size text, you can use viewport units for responsive typography. Viewport units, like percentages, are relative units, but they are based off different items. Viewport units are relative to the viewport dimensions (width or height) of a device, and percentages are relative to the size of the parent container element.</p>\n<p>The four different viewport units are:</p>\n<ul><li><code>vw</code> (viewport width): <code>10vw</code> would be 10% of the viewport's width.</li><li><code>vh</code> (viewport height): <code>3vh</code> would be 3% of the viewport's height.</li><li><code>vmin</code> (viewport minimum): <code>70vmin</code> would be 70% of the viewport's smaller dimension (height or width).</li><li><code>vmax</code> (viewport maximum): <code>100vmax</code> would be 100% of the viewport's bigger dimension (height or width).</li></ul>\n<p>Here is an example that sets a <code>body</code> tag to 30% of the viewport's width.</p>\n<pre class=\"language-css\" tabindex=\"0\"><code class=\"language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 30vw<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n</code></pre>\n",
    "instructions": "\n<p>Set the <code>width</code> of the <code>h2</code> tag to 80% of the viewport's width and the <code>width</code> of the paragraph as 75% of the viewport's smaller dimension.</p>\n"
  }
]
